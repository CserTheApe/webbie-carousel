(()=>{"use strict";const t={render(t){return`\n        ${this.css(t.css)}\n        ${this.html(t.html)}\n        `},html:t=>`\n        <div id="container" ${t.rootStyle?`style="${t.rootStyle}"`:""}>\n            ${t.title?`<h2 ${t.titleStyle?`style="${t.titleStyle}"`:""}>${t.title}</h2>`:""}\n            ${t.subText?`<p ${t.subTextStyle?`style="${t.subTextStyle}"`:""}>${t.subText}</p>`:""}\n            <div id="carousel">\n                <button class="slider" id="slideprev">\n                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><polyline points="15 18 9 12 15 6"></polyline></svg>\n                </button>\n                <button class="slider" id="slidenext">\n                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><polyline points="9 18 15 12 9 6"></polyline></svg>\n                </button>\n                <div id="scroller">\n                <slot></slot>\n                </div>\n            </div>\n        </div>\n        `,css:t=>`\n    <style>\n        #container {\n            padding: 16px;\n        }\n        h2 {\n            margin-top: 5px;\n        }\n        #carousel {\n            position: relative;\n        }\n        #scroller {\n            display: flex;\n            overflow: auto;\n            white-space: nowrap;\n            scrollbar-width: none;\n            -ms-overflow-style: none;\n            gap: ${t.gap?t.gap:"10px"};\n            margin: 0;\n            padding: 0;\n        }\n        #scroller::-webkit-scrollbar {\n            display: none;\n        }\n        ::slotted(*) {\n            flex-shrink: 0;\n        }\n\n\n        .slider {\n            position: absolute;\n            width: ${t.buttonWidth?t.buttonWidth:"50px"};\n            height: auto;\n            top: 0;\n            bottom: 0;\n            margin: auto 0;\n            border: none;\n            padding: 0;\n            background: none;\n            cursor: pointer;\n            opacity: ${t.buttonOpacity};\n            background-color: ${t.buttonColor?t.buttonColor:"#cccccc"};\n        }\n        .slider:hover {\n            opacity: ${t.hoverOpacity};\n        }\n        .slider:active {\n            opacity: ${t.clickOpacity};\n        }\n        .slider:disabled {\n            display: none;\n        }\n        .slider svg {\n            stroke: ${t.arrowColor?t.arrowColor:"#555555"};\n            width: ${t.arrowSize?t.arrowSize:"50px"};\n            height: ${t.arrowSize?t.arrowSize:"50px"};\n        }\n\n        #slidenext {\n            right: 0;\n        }\n        #slideprev {\n            left: 0;\n        }\n\n    </style>\n    `};class e extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.render()}static get observedAttributes(){return["gap","text","text-style","subtext","subtext-style","container-style","arrow-color","button-color","button-width","arrow-size","button-opacity","hover-opacity","click-opacity"]}attributeChangedCallback(t,e,n){this.render()}render(){const e=this.getAttribute("gap"),n=this.getAttribute("text"),i=this.getAttribute("text-style"),o=this.getAttribute("subtext"),s=this.getAttribute("subtext-style"),r=this.getAttribute("container-style"),l=this.getAttribute("arrow-color"),c=this.getAttribute("button-color"),h=this.getAttribute("button-width"),a=this.getAttribute("arrow-size"),d=Number(this.getAttribute("button-opacity")),u=Number(this.getAttribute("hover-opacity")),b=Number(this.getAttribute("click-opacity"));this.shadowRoot.innerHTML=t.render({html:{title:n,rootStyle:r,titleStyle:i,subText:o,subTextStyle:s},css:{gap:e,arrowColor:l,buttonColor:c,buttonWidth:h,arrowSize:a,buttonOpacity:d?this.numerify(d,1):.5,hoverOpacity:u?this.numerify(u,1):.8,clickOpacity:b?this.numerify(b,1):1}}),this.scrollDiv=this.shadowRoot.getElementById("scroller"),this.buttonLeft=this.shadowRoot.getElementById("slideprev"),this.buttonRight=this.shadowRoot.getElementById("slidenext"),this.checkScrollButtons(),this.scrollDiv.addEventListener("scroll",(t=>{this.checkScrollButtons()})),this.scrollDiv.addEventListener("slotchange",(t=>{this.checkScrollButtons()})),this.shadowRoot.getElementById("slidenext").addEventListener("click",(t=>{this.scrollDiv.scrollBy({left:this.getScrollLength(),behavior:"smooth"})})),this.shadowRoot.getElementById("slideprev").addEventListener("click",(t=>{this.scrollDiv.scrollBy({left:-this.getScrollLength(),behavior:"smooth"})}))}getScrollLength(){return.8*this.scrollDiv.clientWidth}checkScrollButtons(){let t=this.scrollDiv.scrollWidth,e=this.scrollDiv.scrollLeft,n=this.scrollDiv.clientWidth+e;this.buttonLeft.disabled=e<5,Math.abs(t-n)<5?this.buttonRight.disabled=!0:this.buttonRight.disabled=!1}numerify(t,e){return Math.max(Math.min(t,e),0)}}customElements.get("webbie-carousel")||customElements.define("webbie-carousel",e)})();